name: Create new release on version bump

permissions:
  contents: write

on:
  push: { branches: ["main"] }

jobs:
  check-release:
    name: Create release if it makes sense
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Check if a new release is needed
        id: info
        env:
          COMMIT_BEFORE: ${{ github.event.before }}
          COMMIT_AFTER: ${{ github.event.after }}
        shell: bash
        run: |
          mkdir -p dummy && echo 0 > dummy/revision.txt
          cp utils/helium_version.py .

          git checkout "$COMMIT_BEFORE" \
            && OLD_VERSION=$(python3 helium_version.py --tree . --print)

          git checkout "$COMMIT_AFTER" \
            && NEW_VERSION=$(python3 helium_version.py --tree . --print)

          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
            {
              printf '### Changelog\n```\n'
              git log --oneline "$OLD_VERSION.."
              echo '```'
            } | tee body.md
          fi

      - name: Create Release
        if: steps.info.outputs.version
        id: create_release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.info.outputs.version }}
          name: ${{ steps.info.outputs.version }}
          body_path: body.md
