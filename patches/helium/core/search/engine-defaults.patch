--- a/components/search_engines/template_url_prepopulate_data.cc
+++ b/components/search_engines/template_url_prepopulate_data.cc
@@ -235,7 +235,7 @@ std::unique_ptr<TemplateURLData> GetPrep
     std::vector<const TemplateURLPrepopulateData::PrepopulatedEngine*>
         regional_prepopulated_engines) {
   return FindPrepopulatedEngineInternal(prefs, regional_prepopulated_engines,
-                                        google.id,
+                                        duckduckgo.id,
                                         /*use_first_as_fallback=*/true);
 }
 
--- a/third_party/search_engines_data/resources/definitions/regional_settings.json
+++ b/third_party/search_engines_data/resources/definitions/regional_settings.json
@@ -3,6 +3,19 @@
 // found in the LICENSE file.
 {
   "elements": {
+    "ZZ": {
+      // Default
+      "search_engines": [
+          "&duckduckgo",
+          "&ecosia",
+          "&bing",
+          "&break_stuff_google",
+          "&qwant",
+          "&kagi"
+      ]
+    }
+  },
+  "elements_ignored": {
     "AE": {
       // United Arab Emirates
       "search_engines": [
@@ -1183,7 +1196,8 @@
     "name": "kRegionalSettings",
     "export_items": false,
     "map_key_type": "country_codes::CountryId",
-    "map_aliases": {
+    "map_aliases": {},
+    "map_aliases_ignored": {
       "AD": "ES", // Andorra
       "AF": "ZZ", // Afghanistan
       "AG": "ZZ", // Antigua and Barbuda
