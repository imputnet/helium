--- a/components/update_client/update_checker.cc
+++ b/components/update_client/update_checker.cc
@@ -104,7 +104,6 @@ void UpdateCheckerImpl::CheckForUpdates(
     scoped_refptr<UpdateContext> context,
     const base::flat_map<std::string, std::string>& additional_attributes,
     UpdateCheckCallback update_check_callback) {
-  return;
   DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);
 
   update_check_callback_ = std::move(update_check_callback);
--- a/components/component_updater/configurator_impl.cc
+++ b/components/component_updater/configurator_impl.cc
@@ -76,6 +76,8 @@ base::TimeDelta ConfiguratorImpl::Update
 }
 
 std::vector<GURL> ConfiguratorImpl::UpdateUrl() const {
+  return {};
+
   DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);
   if (url_source_override_.is_valid()) {
     return {GURL(url_source_override_)};
@@ -123,7 +125,7 @@ bool ConfiguratorImpl::EnabledDeltas() c
 
 bool ConfiguratorImpl::EnabledComponentUpdates() const {
   DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);
-  return true;
+  return false;
 }
 
 bool ConfiguratorImpl::EnabledBackgroundDownloader() const {
@@ -133,7 +135,7 @@ bool ConfiguratorImpl::EnabledBackground
 
 bool ConfiguratorImpl::EnabledCupSigning() const {
   DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);
-  return true;
+  return false;
 }
 
 // The default implementation for most embedders returns an empty string.
--- a/extensions/browser/updater/extension_downloader.cc
+++ b/extensions/browser/updater/extension_downloader.cc
@@ -352,6 +352,10 @@ void ExtensionDownloader::DoStartAllPend
     AddToFetches(fetches_preparing, std::move(task));
   pending_tasks_.clear();
 
+  for (auto& fetch_list : fetches_preparing) {
+    for (auto& fetch : fetch_list.second)
+      StartUpdateCheck(std::move(fetch));
+  }
 }
 
 void ExtensionDownloader::SetIdentityManager(
