--- a/chrome/browser/ui/layout_constants.cc
+++ b/chrome/browser/ui/layout_constants.cc
@@ -29,7 +29,7 @@ int GetLayoutConstant(LayoutConstant con
     case BOOKMARK_BAR_HEIGHT: {
       // The fixed margin ensures the bookmark buttons appear centered relative
       // to the white space above and below.
-      const int bookmark_bar_attached_vertical_margin = 6;
+      const int bookmark_bar_attached_vertical_margin = 3;
       return GetLayoutConstant(BOOKMARK_BAR_BUTTON_HEIGHT) +
              bookmark_bar_attached_vertical_margin;
     }
@@ -52,7 +52,7 @@ int GetLayoutConstant(LayoutConstant con
     case LOCATION_BAR_CHILD_INTERIOR_PADDING:
       return 3;
     case LOCATION_BAR_CHILD_CORNER_RADIUS:
-      return 12;
+      return 6;
     case LOCATION_BAR_CHIP_ICON_SIZE:
       return 16;
     case LOCATION_BAR_CHIP_PADDING:
@@ -60,7 +60,7 @@ int GetLayoutConstant(LayoutConstant con
     case LOCATION_BAR_ELEMENT_PADDING:
       return touch_ui ? 3 : 2;
     case LOCATION_BAR_PAGE_INFO_ICON_VERTICAL_PADDING:
-      return touch_ui ? 3 : 5;
+      return touch_ui ? 3 : 2;
     case LOCATION_BAR_LEADING_DECORATION_EDGE_PADDING:
       // TODO(manukh): See comment in `LocationBarView::Layout()`. We have too
       //   many feature permutations that would affect this and other layout
@@ -69,11 +69,11 @@ int GetLayoutConstant(LayoutConstant con
       //   here once we decide on a permutation.
       NOTREACHED();
     case LOCATION_BAR_TRAILING_DECORATION_EDGE_PADDING:
-      return touch_ui ? 3 : 12;
+      return touch_ui ? 3 : 2;
     case LOCATION_BAR_TRAILING_DECORATION_INNER_PADDING:
       return touch_ui ? 3 : 8;
     case LOCATION_BAR_HEIGHT:
-      return touch_ui ? 36 : 34;
+      return touch_ui ? 36 : 28;
     case LOCATION_BAR_ICON_SIZE:
       return touch_ui ? 20 : 16;
     case LOCATION_BAR_LEADING_ICON_SIZE:
@@ -93,12 +93,12 @@ int GetLayoutConstant(LayoutConstant con
     case TAB_CLOSE_BUTTON_SIZE:
       return touch_ui ? 24 : 16;
     case TAB_HEIGHT:
-      return 34 + GetLayoutConstant(TABSTRIP_TOOLBAR_OVERLAP);
+      return 31;
     case TAB_STRIP_HEIGHT:
       return GetLayoutConstant(TAB_HEIGHT) +
              GetLayoutConstant(TAB_STRIP_PADDING);
     case TAB_STRIP_PADDING:
-      return 6;
+      return 3;
     case TAB_SEPARATOR_HEIGHT:
       return touch_ui ? 24 : 20;
     case TAB_PRE_TITLE_PADDING:
@@ -106,28 +106,23 @@ int GetLayoutConstant(LayoutConstant con
     case TAB_STACK_DISTANCE:
       return touch_ui ? 4 : 6;
     case TABSTRIP_TOOLBAR_OVERLAP:
-      // Because tab scrolling puts the tabstrip on a separate layer,
-      // changing paint order, this overlap isn't compatible with scrolling.
-      if (base::FeatureList::IsEnabled(tabs::kScrollableTabStrip)) {
-        return 0;
-      }
-      return 1;
+      return 0;
     case TOOLBAR_BUTTON_HEIGHT:
-      return touch_ui ? 48 : 34;
+      return touch_ui ? 48 : 28;
     case TOOLBAR_DIVIDER_CORNER_RADIUS:
       return 1;
     case TOOLBAR_DIVIDER_HEIGHT:
       return touch_ui ? 20 : 16;
     case TOOLBAR_DIVIDER_SPACING:
-      return 9;
+      return 6;
     case TOOLBAR_DIVIDER_WIDTH:
-      return 2;
+      return 1;
     case TOOLBAR_ELEMENT_PADDING:
-      return touch_ui ? 0 : 4;
+      return touch_ui ? 0 : 3;
     case TOOLBAR_ICON_DEFAULT_MARGIN:
-      return touch_ui ? 0 : 2;
+      return touch_ui ? 0 : 3;
     case TOOLBAR_STANDARD_SPACING:
-      return touch_ui ? 12 : 9;
+      return touch_ui ? 12 : 6;
     case PAGE_INFO_ICON_SIZE:
       return 20;
     case DOWNLOAD_ICON_SIZE:
@@ -167,7 +162,7 @@ gfx::Insets GetLayoutInsets(LayoutInset
     }
 
     case TOOLBAR_BUTTON:
-      return gfx::Insets(touch_ui ? 12 : 7);
+      return gfx::Insets(touch_ui ? 12 : 4);
 
     case BROWSER_APP_MENU_CHIP_PADDING:
       if (touch_ui) {
@@ -183,11 +178,11 @@ gfx::Insets GetLayoutInsets(LayoutInset
       if (touch_ui) {
         return GetLayoutInsets(TOOLBAR_BUTTON);
       } else {
-        return gfx::Insets::TLBR(7, 10, 7, 4);
+        return gfx::Insets::TLBR(4, 5, 4, 4);
       }
 
     case TOOLBAR_INTERIOR_MARGIN:
-      return touch_ui ? gfx::Insets::VH(4, 0) : gfx::Insets::VH(6, 5);
+      return touch_ui ? gfx::Insets() : gfx::Insets::TLBR(0, 6, 3, 6);
 
     case WEBUI_TAB_STRIP_TOOLBAR_INTERIOR_MARGIN:
       return gfx::Insets::VH(4, 0);
