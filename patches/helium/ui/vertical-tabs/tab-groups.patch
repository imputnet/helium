--- a/chrome/browser/ui/views/tabs/tab_group_editor_bubble_view.cc
+++ b/chrome/browser/ui/views/tabs/tab_group_editor_bubble_view.cc
@@ -285,7 +285,9 @@ TabGroupEditorBubbleView::TabGroupEditor
     std::optional<gfx::Rect> anchor_rect,
     bool stop_context_menu_propagation)
     : BubbleDialogDelegateView(anchor_view,
-                               views::BubbleBorder::Arrow::TOP_LEFT,
+                               tabs::AreHeliumVerticalTabsEnabled() ?
+                                  views::BubbleBorder::Arrow::TOP_LEFT :
+                                  views::BubbleBorder::Arrow::LEFT_TOP,
                                views::BubbleBorder::DIALOG_SHADOW,
                                true),
       title_field_controller_(this),
--- a/chrome/browser/ui/views/tabs/tab_group_underline.cc
+++ b/chrome/browser/ui/views/tabs/tab_group_underline.cc
@@ -9,6 +9,7 @@
 
 #include "chrome/browser/ui/layout_constants.h"
 #include "chrome/browser/ui/tabs/tab_style.h"
+#include "chrome/browser/ui/tabs/features.h"
 #include "chrome/browser/ui/views/tabs/tab.h"
 #include "chrome/browser/ui/views/tabs/tab_group_header.h"
 #include "chrome/browser/ui/views/tabs/tab_group_style.h"
@@ -51,6 +52,10 @@ void TabGroupUnderline::UpdateBounds(con
   const gfx::Rect tab_group_underline_bounds =
       CalculateTabGroupUnderlineBounds(this, leading_view, trailing_view);
 
+  if (tabs::AreHeliumVerticalTabsEnabled()) {
+    SetVisible(true);
+  } else {
+
   // The width may be zero if the group underline and header are initialized at
   // the same time, as with tab restore. In this case, don't show the underline.
   if (tab_group_underline_bounds.width() == 0) {
@@ -60,6 +65,8 @@ void TabGroupUnderline::UpdateBounds(con
 
   SetVisible(
       !style_->TabGroupUnderlineShouldBeHidden(leading_view, trailing_view));
+  }
+
   SetBoundsRect(tab_group_underline_bounds);
 }
 
@@ -67,6 +74,15 @@ gfx::Rect TabGroupUnderline::CalculateTa
     const views::View* const underline_view,
     const views::View* const leading_view,
     const views::View* const trailing_view) const {
+
+  if (tabs::AreHeliumVerticalTabsEnabled()) {
+    int y = leading_view->y() + leading_view->height();
+    return gfx::Rect(
+      TabGroupUnderline::GetStrokeInset(), y - kStrokeThickness,
+      kStrokeThickness, (trailing_view->y() + trailing_view->height()) - y - kStrokeThickness
+    );
+  }
+
   gfx::RectF leading_bounds = views::View::ConvertRectToTarget(
       leading_view->parent(), underline_view->parent(),
       gfx::RectF(leading_view->bounds()));
@@ -110,6 +126,10 @@ gfx::Insets TabGroupUnderline::GetInsets
 }
 
 void TabGroupUnderline::MaybeSetVisible(const bool visible) {
+  if (tabs::AreHeliumVerticalTabsEnabled()) {
+    SetVisible(true);
+    return;
+  }
   SetVisible(visible && !style_->TabGroupUnderlineShouldBeHidden());
 }
 
--- a/chrome/browser/ui/views/tabs/tab_group_views.cc
+++ b/chrome/browser/ui/views/tabs/tab_group_views.cc
@@ -9,6 +9,7 @@
 
 #include "base/memory/raw_ptr.h"
 #include "chrome/browser/ui/tabs/tab_strip_model.h"
+#include "chrome/browser/ui/tabs/features.h"
 #include "chrome/browser/ui/views/frame/browser_non_client_frame_view.h"
 #include "chrome/browser/ui/views/tabs/tab_group_header.h"
 #include "chrome/browser/ui/views/tabs/tab_group_highlight.h"
@@ -39,19 +40,25 @@ TabGroupViews::TabGroupViews(views::View
   header_ = container_view->AddChildView(std::move(header));
   underline_ = container_view->AddChildView(
       std::make_unique<TabGroupUnderline>(this, group_, *style));
-  drag_underline_ = drag_container_view->AddChildView(
-      std::make_unique<TabGroupUnderline>(this, group_, *style));
-  highlight_ = drag_container_view->AddChildView(
-      std::make_unique<TabGroupHighlight>(this, group_, *style));
-  highlight_->SetVisible(false);
+
+  if (!tabs::AreHeliumVerticalTabsEnabled()) {
+    drag_underline_ = drag_container_view->AddChildView(
+        std::make_unique<TabGroupUnderline>(this, group_, *style));
+    highlight_ = drag_container_view->AddChildView(
+        std::make_unique<TabGroupHighlight>(this, group_, *style));
+    highlight_->SetVisible(false);
+  }
 }
 
 TabGroupViews::~TabGroupViews() {
   header_->parent()->RemoveChildViewT(std::exchange(header_, nullptr));
   underline_->parent()->RemoveChildViewT(std::exchange(underline_, nullptr));
+
+  if (!tabs::AreHeliumVerticalTabsEnabled()) {
   drag_underline_->parent()->RemoveChildViewT(
       std::exchange(drag_underline_, nullptr));
   highlight_->parent()->RemoveChildViewT(std::exchange(highlight_, nullptr));
+  }
 }
 
 void TabGroupViews::UpdateBounds() {
@@ -64,6 +71,8 @@ void TabGroupViews::UpdateBounds() {
       GetLeadingTrailingGroupViews();
   underline_->UpdateBounds(leading_group_view, trailing_group_view);
 
+  if (tabs::AreHeliumVerticalTabsEnabled()) return;
+
   auto [leading_dragged_group_view, trailing_dragged_group_view] =
       GetLeadingTrailingDraggedGroupViews();
   drag_underline_->UpdateBounds(leading_dragged_group_view,
@@ -110,7 +119,7 @@ void TabGroupViews::OnGroupVisualsChange
 
   header_->VisualsChanged();
   underline_->SchedulePaint();
-  drag_underline_->SchedulePaint();
+  if (!tabs::AreHeliumVerticalTabsEnabled()) drag_underline_->SchedulePaint();
 }
 
 gfx::Rect TabGroupViews::GetBounds() const {
@@ -138,6 +147,7 @@ SkColor TabGroupViews::GetGroupColor() c
 }
 
 bool TabGroupViews::InTearDown() const {
+  if (tabs::AreHeliumVerticalTabsEnabled()) return !header_ || !header_->GetWidget();
   return !header_ || !header_->GetWidget() || !drag_underline_->GetWidget();
 }
 
@@ -145,10 +155,14 @@ std::tuple<const views::View*, const vie
 TabGroupViews::GetLeadingTrailingGroupViews() const {
   std::vector<raw_ptr<views::View, VectorExperimental>> children =
       underline_->parent()->children();
-  std::vector<raw_ptr<views::View, VectorExperimental>> dragged_children =
+
+  if (!tabs::AreHeliumVerticalTabsEnabled()) {
+    std::vector<raw_ptr<views::View, VectorExperimental>> dragged_children =
       drag_underline_->parent()->children();
-  children.insert(children.end(), dragged_children.begin(),
+    children.insert(children.end(), dragged_children.begin(),
                   dragged_children.end());
+  }
+
   return GetLeadingTrailingGroupViews(children);
 }
 
@@ -178,6 +192,22 @@ TabGroupViews::GetLeadingTrailingGroupVi
     gfx::Rect child_widget_bounds =
         child->ConvertRectToWidget(child->GetLocalBounds());
 
+    if (tabs::AreHeliumVerticalTabsEnabled()) {
+      if (!leading_child ||
+          child_widget_bounds.y() < leading_child_widget_bounds.y()) {
+        leading_child = child;
+        leading_child_widget_bounds = child_widget_bounds;
+      }
+
+      if (!trailing_child ||
+          child_widget_bounds.bottom() > trailing_child_widget_bounds.bottom()) {
+        trailing_child = child;
+        trailing_child_widget_bounds = child_widget_bounds;
+      }
+
+      continue;
+    }
+
     if (!leading_child ||
         child_widget_bounds.x() < leading_child_widget_bounds.x()) {
       leading_child = child;
